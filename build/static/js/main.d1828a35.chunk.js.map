{"version":3,"sources":["serviceWorker.js","components/Header/index.jsx","components/MovieCard/index.jsx","components/MovieCardCollection/index.jsx","components/AppSidebar/index.jsx","components/AppBody/index.jsx","components/App/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","navNames","Header","navName","map","nav","react_default","a","createElement","className","key","v4","href","headerLogo","this","props","React","Component","MovieCard","_this$props","tittle","descr","rating","onClick","img","release_date","src","alt","MovieCardCollection","children","AppSidebar","state","InputValues","_searchValues","evt","name","target","_this","Categories__btn","_searchInputValues","value","setState","Object","defineProperty","_searchInputValuesonSubmit","preventDefault","SearchForm__input2","onSubmit","type","onChange","AppBody","post","SearchCategories__btn","query","fetch","concat","then","response","ok","json","Error","statusText","data","films","results","film","id","overview","slice","title","vote_average","poster_path","catch","err","console","error","SearchForm__input","log","onDeleteCard","filter","currentPost","_this2","length","_this3","components_AppSidebar","components_MovieCardCollection","components_MovieCard","App","components_Header","components_AppBody","root","document","querySelector","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1828a35.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst navNames = [\"Login\", \"Browse\", \"About\"];\r\n\r\nclass Header extends React.Component {\r\n  navName = navNames.map(nav => (\r\n    <li className=\"Navigation__item\" key={v4()}>\r\n      <a href=\"http://localhost:3000/\" className=\"Navigation__link\">\r\n        {nav}\r\n      </a>\r\n    </li>\r\n  ));\r\n  render() {\r\n    const { headerLogo } = this.props;\r\n\r\n    return (\r\n      <header className=\"Header\">\r\n        <h1 className=\"Header__logo\">{headerLogo}</h1>\r\n        <ul className=\"Navigation\">{this.navName}</ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  headerLogo: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n// import v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MovieCard extends React.Component {\r\n  render() {\r\n    const {\r\n      tittle,\r\n      descr,\r\n      rating,\r\n      onClick,\r\n      img,\r\n      release_date\r\n    } = this.props;\r\n    return (\r\n      <div className=\"MovieCard\">\r\n        <div>\r\n          <span className=\"MovieInfo__rating\">{rating}</span>\r\n          <img src={img} alt=\"img\" className=\"MovieCard__poster\" />\r\n          <h2 className=\"MovieInfo__title\">{tittle}</h2>\r\n          <p className=\"MovieInfo__descr\">{descr} </p>\r\n          <p className=\"MovieInfo__release\">Release date: {release_date}</p>\r\n        </div>\r\n        <button className=\"MovieCard__btn \" onClick={onClick}>\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  tittle: PropTypes.string.isRequired,\r\n  descr: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass MovieCardCollection extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"MovieList\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default MovieCardCollection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\n\r\nclass AppSidebar extends React.Component {\r\n  static propTypes = {\r\n    Categories__btn: PropTypes.func.isRequired,\r\n    SearchForm__input2: PropTypes.func.isRequired\r\n  };\r\n  // state = {\r\n  //   inputTitleValue: \"\",\r\n  //   inputDescriptionValue: \"\",\r\n  //   inputRatingValue: \"\"\r\n  // };\r\n\r\n  // _handleInputChange = evt => {\r\n  //   const value = evt.target.value;\r\n  //   const name = evt.target.name;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n  // _handleSubmit = evt => {\r\n  //   evt.preventDefault();\r\n  //   const {\r\n  //     inputTitleValue,\r\n  //     inputDescriptionValue,\r\n  //     inputRatingValue\r\n  //   } = this.state;\r\n  //   this.props.onFormSubmit(\r\n  //     inputTitleValue,\r\n  //     inputDescriptionValue,\r\n  //     inputRatingValue\r\n  //   );\r\n  //   this.setState({\r\n  //     inputTitleValue: \"\",\r\n  //     inputDescriptionValue: \"\",\r\n  //     inputRatingValue: \"\"\r\n  //   });\r\n  // };\r\n  state = {\r\n    InputValues: \"\"\r\n  };\r\n\r\n  _searchValues = evt => {\r\n    let name = evt.target.name;\r\n    this.props.Categories__btn(name);\r\n  };\r\n\r\n  _searchInputValues = evt => {\r\n    let value = evt.target.value;\r\n    const name = evt.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  _searchInputValuesonSubmit = evt => {\r\n    evt.preventDefault();\r\n    const { InputValues } = this.state;\r\n    this.props.SearchForm__input2(InputValues);\r\n    this.setState({\r\n      InputValues: \"\"\r\n    });\r\n\r\n    // this.props.SearchForm__input2(value);\r\n  };\r\n\r\n  render() {\r\n    // const {\r\n    //   inputTitleValue,\r\n    //   inputDescriptionValue,\r\n    //   inputRatingValue\r\n    // } = this.state;\r\n    // const ratingScores = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"];\r\n    // const ratingScore = ratingScores.map(rating => (\r\n    //   <option value={rating} key={v4()}>\r\n    //     {rating}\r\n    //   </option>\r\n    // ));\r\n    // const { getFilm } = this.props;\r\n    const { InputValues } = this.state;\r\n    return (\r\n      // <form className=\"MovieForm\" onSubmit={this._handleSubmit}>\r\n      //   <label className=\"MovieForm__label\">\r\n      //     Title\r\n      //     <input\r\n      //       type=\"text\"\r\n      //       className=\"MovieForm__input\"\r\n      //       value={inputTitleValue}\r\n      //       name=\"inputTitleValue\"\r\n      //       onChange={this._handleInputChange}\r\n      //     />\r\n      //   </label>\r\n      //   <label className=\"MovieForm__label\">\r\n      //     Description\r\n      //     <textarea\r\n      //       className=\"MovieForm__txtarea\"\r\n      //       rows=\"8\"\r\n      //       type=\"text\"\r\n      //       value={inputDescriptionValue}\r\n      //       name=\"inputDescriptionValue\"\r\n      //       onChange={this._handleInputChange}\r\n      //     />\r\n      //   </label>\r\n      //   <label className=\"MovieForm__label\">\r\n      //     Rating\r\n      //     <select\r\n      //       className=\"MovieForm__input\"\r\n      //       value={inputRatingValue}\r\n      //       name=\"inputRatingValue\"\r\n      //       onChange={this._handleInputChange}\r\n      //     >\r\n      //       {ratingScore}\r\n      //     </select>\r\n      //   </label>\r\n      //   <button className=\"MovieForm__submit\" type=\"submit\">\r\n      //     submit\r\n      //   </button>\r\n      // </form>\r\n      <div className=\"App__sidebar\">\r\n        <form className=\"SearchForm\" onSubmit={this._searchInputValuesonSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"SearchForm__input\"\r\n            name=\"InputValues\"\r\n            value={InputValues}\r\n            onChange={this._searchInputValues}\r\n          />\r\n          <button className=\"SearchForm__btn\" type=\"submit\">\r\n            search\r\n          </button>\r\n        </form>\r\n        <div className=\"SearchCategories\">\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"popular\"\r\n            onClick={this._searchValues}\r\n          >\r\n            popular\r\n          </button>\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"top_rated\"\r\n            onClick={this._searchValues}\r\n          >\r\n            top rated\r\n          </button>\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"upcoming\"\r\n            onClick={this._searchValues}\r\n          >\r\n            upcoming\r\n          </button>\r\n        </div>\r\n        <div className=\"Watchlist\">\r\n          <h2 className=\"Watchlist__title\">Watchlist</h2>\r\n          <p className=\"Watchlist__msg\">Add movies to watchlist...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppSidebar;\r\n","import React from \"react\";\r\n// import v4 from \"uuid/v4\";\r\n// import posts from \"../../posts\";\r\nimport \"./style.css\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport MovieCardCollection from \"../MovieCardCollection\";\r\nimport AppSidebar from \"../AppSidebar\";\r\n\r\nclass AppBody extends React.Component {\r\n  state = {\r\n    post: []\r\n  };\r\n\r\n  SearchCategories__btn = query => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${query}?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false`\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date,\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  SearchForm__input = query => {\r\n    console.log(query);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=${query}&include_adult=false`\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date,\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  componentWillMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false\"\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        \r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date,\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        console.log(films.length);\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   fetch(`https://api.themoviedb.org/3/search/movie?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false`)\r\n  //     .then(response => {\r\n  //       if (response.ok) {\r\n  //         return response.json();\r\n  //       }\r\n  //       throw new Error(\"Error\" + response.statusText);\r\n  //     })\r\n  //   .then(data => console.log(data))\r\n  //   .catch (err => console.error(err));\r\n  // }\r\n\r\n  // onAddNewPost = (tittle, descr, rating) => {\r\n  //   const newPost = {\r\n  //     id: v4(),\r\n  //     chipsList: [],\r\n  //     descr: descr,\r\n  //     rating: rating,\r\n  //     tittle: tittle\r\n  //   };\r\n  //   console.log(newPost);\r\n  //   this.setState({\r\n  //     post: [...this.state.post, newPost]\r\n  //   });\r\n  // };\r\n\r\n  onDeleteCard = id => {\r\n    console.log(id);\r\n    this.setState({\r\n      post: this.state.post.filter(currentPost => currentPost.id !== id)\r\n    });\r\n  };\r\n\r\n  // SearchSearchForm__input = value => console.log(value);\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    return (\r\n      <div className=\"App__body\">\r\n        {/* <MovieForm onFormSubmit={this.onAddNewPost} /> */}\r\n        <AppSidebar\r\n          Categories__btn={this.SearchCategories__btn}\r\n          SearchForm__input2={this.SearchForm__input}\r\n        />\r\n        <MovieCardCollection>\r\n          {post.map(post => (\r\n            <MovieCard\r\n              img={post.poster_path}\r\n              tittle={post.tittle}\r\n              descr={post.descr}\r\n              rating={post.rating}\r\n              key={post.id}\r\n              release_date={post.release_date}\r\n              onClick={() => {\r\n                this.onDeleteCard(post.id);\r\n              }}\r\n            />\r\n          ))}\r\n        </MovieCardCollection>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBody;\r\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport Header from \"../Header/index\";\r\nimport AppBody from \"../AppBody/index\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div className=\"App\" id={v4()}>\r\n        <Header headerLogo=\"Movie Mate\" />\r\n        <AppBody />\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n import App from './components/App/index'\n \nconst root = document.querySelector('#root');\n\nReactDOM.render( < App / > , root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}